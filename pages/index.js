import Head from "next/head";
import { useCallback, useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import Pusher from "pusher-js";

export default function Home() {
  const [userName, setUsername] = useState("");
  const [message, setMessage] = useState("");
  const [messages, setMessages] = useState([]);
  const [userHasNotFillUserName, setUserHasNotFillUserName] = useState(false);

  const handleChangeMessage = useCallback((event) => {
    const { value } = event.target;
    setMessage(value);
  }, []);

  const handleChangeUserName = useCallback((event) => {
    const { value } = event.target;
    if (value) {
      setUserHasNotFillUserName(false);
    } else {
      setUserHasNotFillUserName(true);
    }
    setUsername(value);
  }, []);

  useEffect(() => {
    Pusher.logToConsole = true;

    var pusher = new Pusher("5bf4f75a9d33656dad71", {
      cluster: "us2",
    });

    var channel = pusher.subscribe("chat");
    channel.bind("message", function (data) {
      console.log("data", data);
      setMessages([data]);
    });
  }, []);

  useEffect(() => {
    if (messages.length > 1) {
      console.log(messages);
    }
  }, [messages]);

  const handleSubmitMessage = useCallback(
    async (event) => {
      event.preventDefault();
      if (userName === "") {
        setUserHasNotFillUserName(true);
        alert("Please fill the Username");
        return;
      }

      await fetch("http://localhost:8080/api/messages", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ userName, message }),
      });

      setMessage("");
    },
    [message, userName]
  );

  return (
    <div>
      <Head>
        <title>Simple Chat</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <div className={styles.userNameContainer}>
          <input
            type="text"
            name="username"
            placeholder="Username"
            value={userName}
            onChange={handleChangeUserName}
            style={{
              border: userHasNotFillUserName && "2px solid red",
            }}
          />
        </div>
        <div className={styles.chat}>
          {messages.length >= 1 &&
            messages?.map((message, index) => {
              return (
                <div key={index}>
                  <div>
                    <strong>{message.userName}</strong>
                  </div>
                  <p>{message.message}</p>
                </div>
              );
            })}
        </div>
        <form onSubmit={handleSubmitMessage} className={styles.second}>
          <input
            placeholder="Write a message and press Enter"
            value={message}
            onChange={handleChangeMessage}
          />
        </form>
      </main>
    </div>
  );
}
